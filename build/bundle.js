!function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(s,n,function(t){return e[t]}.bind(null,n));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=7)}([function(e,t,i){e.exports=i.p+"build/ab65c472c6b592afe8757bb8be8c6267.png"},function(e,t,i){e.exports=i.p+"build/7298ad485dcc9ced287fcbf13e3e0e4a.flac"},function(e,t,i){e.exports=i.p+"build/92887fc3d2ef95987595a234e87a8dbc.flac"},function(e,t,i){e.exports=i.p+"build/99687fbc92d79583db171874fb9f1edb.flac"},function(e,t,i){e.exports=i.p+"build/4e7a6bc057bd1618c37e536a781e67ba.flac"},function(e,t,i){e.exports=i.p+"build/a28a303dc5ab4f6f8c7cea88fb8ab138.flac"},function(e,t,i){e.exports=i.p+"build/15d8e28908db08ced3de79d1607e528e.flac"},function(e,t,i){"use strict";i.r(t);var s={};i.r(s),i.d(s,"Player",function(){return Be}),i.d(s,"Bullet",function(){return Ee}),i.d(s,"Enemy",function(){return Ce}),i.d(s,"Flag",function(){return Re}),i.d(s,"PowerupEvents",function(){return Te}),i.d(s,"powerupEvents",function(){return Se}),i.d(s,"Powerup",function(){return ke}),i.d(s,"Tank",function(){return ye}),i.d(s,"Movable",function(){return me});var n=i(0),r=i.n(n),o=i(1),a=i.n(o),h=i(2),c=i.n(h),l=i(3),p=i.n(l),u=i(4),d=i.n(u),g=i(5),m=i.n(g),y=i(6),f=i.n(y);function x(e,t){return e.x1<t.x2&&e.x2>t.x1&&e.y1<t.y2&&e.y2>t.y1}const v=e=>Math.floor(Math.random()*e);function b(e,t,i){const s=t/e;return Math.floor(i/s)}function w(e,t,i,s){const n=Math.min(b(t.length,i,s),t.length-1),{sprite:r,size:o}=t[n];return r(e,o)}var M,T,S,k,B,E,C;!function(e){e[e.Top=0]="Top",e[e.Bottom=1]="Bottom",e[e.Right=2]="Right",e[e.Left=3]="Left"}(M||(M={})),function(e){e[e.Default=0]="Default",e[e.Fast=1]="Fast",e[e.Armored=2]="Armored",e[e.Armored2=3]="Armored2",e[e.Armored3=4]="Armored3"}(T||(T={})),function(e){e[e.Helmet=0]="Helmet",e[e.Star=1]="Star",e[e.Stopwatch=2]="Stopwatch",e[e.Grenade=3]="Grenade",e[e.Tank=4]="Tank"}(S||(S={})),function(e){e[e.Default=0]="Default",e[e.First=1]="First",e[e.Second=2]="Second"}(k||(k={})),function(e){e[e.None=0]="None",e[e.Brick1=1]="Brick1",e[e.Brick2=2]="Brick2",e[e.Brick3=3]="Brick3",e[e.Brick4=4]="Brick4",e[e.Steel=5]="Steel",e[e.Ice=6]="Ice",e[e.Grass=7]="Grass",e[e.Water=8]="Water"}(B||(B={})),function(e){e[e.under=0]="under",e[e.main=1]="main",e[e.over=2]="over"}(E||(E={})),function(e){e.ArrowUp="ArrowUp",e.ArrowRight="ArrowRight",e.ArrowDown="ArrowDown",e.ArrowLeft="ArrowLeft",e.Space="Space"}(C||(C={}));const R=1/60,D={x:40,y:40},O={x:40,y:40},P={x:280,y:560},L={x:210,y:560},A={x:10,y:10},j=300,F={x:40,y:40},z={[k.Default]:{velocity:100,shotCD:50},[k.First]:{velocity:120,shotCD:40},[k.Second]:{velocity:150,shotCD:30}},I={[T.Default]:{velocity:100,shotCD:70,lives:1},[T.Fast]:{velocity:200,shotCD:60,lives:1},[T.Armored]:{velocity:120,shotCD:70,lives:3}},G=35,N=35,_=200,W=200,Q=600,q=200,H=400,U=300,K=[{x:0,y:0},{x:560,y:0}],$=20,J=document.getElementById("root"),V=J.getContext("2d");V.font="30px Arial",V.textAlign="center";const X={canvas:J,context:V,clearScreen(){V.clearRect(0,0,J.width,J.height),V.beginPath()},renderChaingingStage(e){const t=b(U,U,e);V.fillRect(0,0,600,t),V.fillRect(0,600-t,600,t)},renderGameOver(e=0){const t=b(U,U,e);V.fillRect(0,0,600,300-t),V.fillRect(0,300+t,600,300-t),e||ne.sprites.gameOver({x:275,y:275},{x:50,y:50})},renderStartScreen(){ne.sprites.logo({x:100,y:200},{x:400,y:200}),V.strokeText("Press any key",300,500)},showPreloader(e){this.clearScreen(),V.strokeText(`Loading...${e}`,300,300)}},Y=document.getElementById("dashboard"),Z=Y.getContext("2d"),ee={canvas:Y,context:Z,render(e,t,i){const{numberIcons:s,flagIcon:n,playerIcon:r,tankIcon:o}=ne.sprites;((e,t)=>{if(!e.length)return;let i=70,s=0;e.forEach((e,n)=>{t(n%2==0?{x:695,y:i}:{x:670,y:i},{x:15,y:15}),2===s?(i+=20,s=0):s+=1})})(i,o),n({x:670,y:450},{x:50,y:40}),r({x:670,y:380},{x:20,y:20}),s[t]({x:690,y:485},{x:20,y:20}),s[e]({x:700,y:380},{x:20,y:20})},clearScreen(){Z.clearRect(0,0,Y.width,Y.height),Z.beginPath()}},te=(e,t)=>(i,s,n,r)=>(o,a)=>{t.drawImage(e,i,s,n,r,o.x,o.y,a.x,a.y)},ie=e=>{const t=te(e,X.context),i=te(e,ee.context);return{player:{[k.Default]:{[M.Top]:[t(0,0,16,15),t(16,0,16,15)],[M.Bottom]:[t(64,0,16,15),t(80,0,16,15)],[M.Right]:[t(96,0,16,15),t(112,0,16,15)],[M.Left]:[t(32,0,16,15),t(48,0,16,15)]},[k.First]:{[M.Top]:[t(0,32.3,16,15),t(15.7,32.5,16,15)],[M.Bottom]:[t(64,32.3,16,15),t(80,32.5,16,15)],[M.Right]:[t(96,32.3,16,15),t(112.3,32,16,15)],[M.Left]:[t(31.7,32,16,15),t(48,32,16,15)]},[k.Second]:{[M.Top]:[t(0,48,16,15),t(15.7,48,16,15)],[M.Bottom]:[t(64,48,16,15),t(80,48,16,15)],[M.Right]:[t(96,48,16,15),t(112.3,48,16,15)],[M.Left]:[t(31.7,48,16,15),t(48,48,16,15)]}},enemy:{[T.Default]:{[M.Top]:[t(128,0,16,15),t(144,0,16,15)],[M.Bottom]:[t(192,0,16,15),t(208,0,16,15)],[M.Right]:[t(223.7,0,16,15),t(239.7,0,16,15)],[M.Left]:[t(160,0,16,15),t(176,0,16,15)]},[T.Fast]:{[M.Top]:[t(128,80,16,15),t(144,80,16,15)],[M.Bottom]:[t(192,80,16,15),t(208,80,16,15)],[M.Right]:[t(224,80,16,15),t(240,80,16,15)],[M.Left]:[t(160,80,16,15),t(176,80,16,15)]},[T.Armored]:{1:{[M.Top]:[t(128.5,111.75,14.75,16),t(144.25,111.75,14.75,16)],[M.Bottom]:[t(191.75,111.75,15.25,16),t(207.5,111.75,15.25,16)],[M.Right]:[t(222.75,111.75,16,16),t(239,111.75,14.75,16)],[M.Left]:[t(159,111.75,16,16),t(174.75,111.75,16,16)]},2:{[M.Top]:[t(0,240,14.75,16),t(16,240,14.75,16)],[M.Bottom]:[t(64,240,15.25,16),t(80,240,15.25,16)],[M.Right]:[t(96,240,16,16),t(112,240,14.75,16)],[M.Left]:[t(32,240,16,16),t(48,240,16,16)]},3:{[M.Top]:[t(128,240,14.75,16),t(144,240,14.75,16)],[M.Bottom]:[t(192,240,15.25,16),t(208,240,15.25,16)],[M.Right]:[t(224,240,16,16),t(240,240,14.75,16)],[M.Left]:[t(160,240,16,16),t(176,240,16,16)]}}},bullet:{[M.Top]:[t(322.25,101.5,5,5.7)],[M.Bottom]:[t(338.5,101.5,5,5.7)],[M.Right]:[t(345.75,101.5,5,5.7)],[M.Left]:[t(329.5,101.5,5,5.7)]},flag:t(304.5,33,16,15.25),flagDeath:t(320,33,16,15.25),tankIcon:i(320.25,192.75,8.5,7.75),flagIcon:i(375.5,184,17,15),playerIcon:i(376.5,144.5,8,8.5),numberIcons:[i(328.5,184,8,7),i(336.5,184,8,7),i(344.5,184,8,7),i(352.5,184,8,7),i(360.5,184,8,7),i(328.5,192,8,7),i(336.5,192,8,7),i(344.5,192,8,7),i(352.5,192,8,7),i(360.5,192,8,7)],logo:t(0,260,375,137),tiles:{[B.Brick1]:t(256,0,8,7),[B.Brick2]:t(264,0,8,7),[B.Brick3]:t(256,8,8,7),[B.Brick4]:t(264,8,8,7),[B.Steel]:t(256,16,8,7),[B.Ice]:t(288,32,8,7),[B.Grass]:t(272,32,8,7),[B.Water]:t(256,40,8,7)},gameOver:t(288.5,184,31.2,16),powerup:{[S.Helmet]:t(255.5,112,16,14),[S.Stopwatch]:t(271.5,112,16,14),[S.Star]:t(303.5,112,16,14),[S.Grenade]:t(319.5,112,16,14),[S.Tank]:t(335.5,112,16,14)},invincible:[t(256,144,15.7,16),t(272.2,144,15.7,16)]}},se=e=>{const t=te(e,X.context);return{tankSpawn:[{sprite:t(303,97,15,14),size:{x:35,y:35}},{sprite:t(303,97,15,14),size:{x:35,y:35}},{sprite:t(288,97,15,14),size:{x:35,y:35}},{sprite:t(273,97,15,14),size:{x:30,y:30}},{sprite:t(257,97,15,14),size:{x:30,y:30}}],tankDestruction:[{sprite:t(336,128.75,32,32),size:{x:60,y:60}},{sprite:t(304.5,128.75,30.5,31.25),size:{x:60,y:60}},{sprite:t(288.25,128.75,16,15.5),size:{x:40,y:40}},{sprite:t(272.25,128.75,15.75,14.25),size:{x:37,y:37}},{sprite:t(258,128.75,13.75,13.25),size:{x:35,y:35}}]}};const ne=new class{constructor(){this.prelaoderState={persentage:0,isRunning:!0}}runPreloader(){if(this.prelaoderState.isRunning)return X.showPreloader(this.prelaoderState.persentage),requestAnimationFrame(this.runPreloader.bind(this))}stopPreloader(){this.prelaoderState.isRunning=!1}loadSprite(e){return new Promise((t,i)=>{const s=new Image;s.src=e,s.addEventListener("load",()=>{this.image=s,this.sprites=ie(s),this.variableSprites=se(s),t()})})}loadAudio(e){this.audio={};const t=Object.keys(e),i=Math.floor(100/t.length),s=t.map(t=>new Promise((s,n)=>{const r=new Audio;r.src=e[t],r.addEventListener("canplaythrough",()=>{this.audio[t]=r,this.prelaoderState.persentage+=i,s()})}));return Promise.all(s)}};const re=new class{constructor(){this.queue=new Set}handleEvent(e,t){const{code:i,type:s}=e;return t.isWaitingForRestart()?t.restart():t.isStartScreen?t.play():void(C[i]&&("keydown"===s?this.queue.add(C[i]):this.queue.delete(C[i])))}getKey(){return Array.from(this.queue).pop()}listenToEvents(e){["keydown","keyup"].forEach(t=>{window.addEventListener(t,t=>{this.handleEvent(t,e)})})}},oe=[[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,5,5,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,5,5,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0],[1,2,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,1,2],[5,5,0,0,3,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,0,0,5,5],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,1,2,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,3,4,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,1,2,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,1,2,0,0,0],[0,0,0,3,4,0,0,3,4,0,0,0,0,1,2,1,2,0,0,0,0,3,4,0,0,3,4,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0]],[[0,0,0,0,1,2,5,5,1,2,1,2,5,5,1,2,5,5,1,2,1,2,5,5,1,2,0,0,0,0],[0,0,0,0,3,4,5,5,3,4,3,4,5,5,3,4,5,5,3,4,3,4,5,5,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,5,5,0,0,1,2,0,0,5,5,1,2,5,5,0,0,1,2,0,0,1,2,0,0,0,0],[0,0,0,0,5,5,0,0,3,4,0,0,5,5,3,4,5,5,0,0,3,4,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,2,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,0,7,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,5,0,6,6,6,6,6,0,7,0,7,0,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,5,7,6,6,6,6,6,7,0,7,0,7,0,7,0,0,0,0,0,0,0,0],[0,0,0,0,1,2,0,0,5,0,6,6,6,6,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,5,7,6,6,6,6,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,1,2,0,0,7,0,6,6,7,0,7,0,7,0,7,0,7,7,0,0,1,2,0,0,0,0],[0,0,0,0,3,4,0,0,7,7,6,6,0,7,0,7,0,7,0,7,0,7,0,0,3,4,0,0,0,0],[0,0,0,0,0,0,0,0,7,0,7,0,7,0,7,0,7,0,7,0,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,5,5,1,2,5,5,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,5,5,3,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0]]],ae=[[2,2,0,0,1,2,1,0,0,0],[2,2,0,0,1,2,1,0,0,0]],he=[B.Brick1,B.Brick2,B.Brick3,B.Brick4,B.Steel,B.Water],ce=[B.Grass,B.Water,B.None],le={[E.under]:[B.Ice,B.Water],[E.main]:[B.Brick1,B.Brick2,B.Brick3,B.Brick4,B.Steel],[E.over]:[B.Grass]};class pe{constructor(e){this.tiles=e.map(e=>[...e])}destroy(e){const t=Math.max(0,Math.floor(e.x/$)),i=Math.max(0,Math.floor(e.y/$));this.tiles[i][t]=B.None}lookup(e){const t=Math.min(Math.max(0,Math.floor(e.x/$)),29),i=Math.min(Math.max(0,Math.floor(e.y/$)),29);return{type:this.tiles[i][t],position:{x:t*$,y:i*$}}}lookupRange(e,t){let i=[];const s=Math.abs(e.x-t.x),n=Math.abs(e.y-t.y);return s>0&&s>$?i.push({x:e.x+$,y:e.y}):n>0&&n>$&&i.push({x:e.x,y:e.y+$}),[e,...i,t].map(e=>this.lookup(e))}renderLayer(e){this.tiles.forEach((t,i)=>{t.forEach((t,s)=>{le[e].includes(t)&&ne.sprites.tiles[t]({x:s*$,y:i*$},{x:$,y:$})})})}}class ue{constructor(e){this.setupTracks(e)}setupTracks(e){this.tracks=e.reduce((e,t)=>{if("string"==typeof t)e[t]=ne.audio[t].cloneNode();else{const{trackName:i,loop:s}=t;e[i]=ne.audio[i].cloneNode(),e[i].loop=s}return e},{})}play(e){return this.tracks[e].play()}pause(e){return this.tracks[e].pause()}pauseAll(){Object.values(this.tracks).forEach(e=>e.pause())}}class de{constructor(){this.timers={}}setTimer(e,t){this.timers[e]=t}getTimer(e){return this.timers[e]}some(e){return Object.entries(this.timers).some(t=>e.includes(t[0])&&t[1]>=0)}decrementTimers(){const e=Object.entries(this.timers).filter(e=>0===e[1]);e.length&&e.forEach(e=>{delete this.timers[e[0]]}),Object.keys(this.timers).forEach(e=>{this.timers[e]-=1})}}class ge{constructor(e,t){this.id=ge.numberGen,this.position=e,this.size=t,ge.numberGen+=1}update(){}render(){}resolveEntityCollision(e){}getBoundingBox(){const{x:e,y:t}=this.position,{x:i,y:s}=this.size;return{x1:e,x2:e+i,y1:t,y2:t+s}}deconstruct(){}}ge.numberGen=0;class me extends ge{constructor(e,t,i){super(e,t),this.direction=i,this.prevPosition=Object.assign({},e)}resolveEdgeCollision(){}resolveTileCollision(e,t){}resolveEntityCollision(e){}move(e){this.prevPosition=Object.assign({},this.position),this.direction===M.Top?this.position.y-=e*R:this.direction===M.Bottom?this.position.y+=e*R:this.direction===M.Left?this.position.x-=e*R:this.direction===M.Right&&(this.position.x+=e*R)}goBack(){this.position=Object.assign({},this.prevPosition)}animateMovement(e){let t;t=this.direction===M.Left||this.direction===M.Right?this.position.x:this.position.y,e[Math.floor(t/.3)%e.length](this.position,this.size)}isOutOfScreen(){const e=this.getBoundingBox();return e.y1<0||e.y2>600||e.x1<0||e.x2>600}getFrontCollisionPoints(){const{x1:e,x2:t,y1:i,y2:s}=this.getBoundingBox();return this.direction===M.Top?[{x:e,y:i},{x:t,y:i}]:this.direction===M.Right?[{x:t,y:i},{x:t,y:s}]:this.direction===M.Bottom?[{x:e,y:s},{x:t,y:s}]:this.direction===M.Left?[{x:e,y:i},{x:e,y:s}]:void 0}}class ye extends me{constructor(e,t,i){super(e,t,i)}shot(e){if(this.timeManager.getTimer("shotCD"))return;let t;const{x:i,y:s}=A;t=this.direction===M.Top?{x:this.size.x/2+this.position.x-i/2,y:this.position.y-s}:this.direction===M.Right?{x:this.size.x+this.position.x,y:this.size.y/2+this.position.y-s/2}:this.direction===M.Bottom?{x:this.size.x/2+this.position.x-i/2,y:this.size.y+this.position.y}:{x:this.position.x-i,y:this.size.y/2+this.position.y-s/2},De.spawnEntity("Bullet",t,this.direction,this),this.timeManager.setTimer("shotCD",e)}die(){this.timeManager.setTimer("death",G),this.soundManager.play("explode"),De.toRemove(this.id)}forgiveCollision(e){const[t,i]=this.getFrontCollisionPoints(),s=e.position;let n,r={x:this.prevPosition.x,y:this.prevPosition.y};if(this.direction===M.Top||this.direction===M.Bottom?s.x>t.x?(n=s.x-i.x,r.x=s.x-this.size.x):(n=s.x+$-t.x,r.x=s.x+$):this.direction!==M.Left&&this.direction!==M.Right||(s.y>t.y?(n=s.y-i.y,r.y=s.y-this.size.y):(n=s.y+$-t.y,r.y=s.y+$)),Math.abs(n)<5)return r}}function fe(e){return e instanceof ye}function xe(e){return e instanceof Be}function ve(e){return e instanceof Ce}function be(e){return e instanceof Ee}function we(e){return e instanceof Re}function Me(e){return e instanceof ke}class Te{constructor(){this.observers={}}subscribe(e,t){this.observers[e]=t}unsubscribe(e){delete this.observers[e]}notify(e){Object.values(this.observers).forEach(t=>t(e))}}const Se=new Te;class ke extends ge{constructor(e,t){super(t,Object.assign({},F)),this.type=e,this.timeManager=new de,this.soundManager=new ue(["powerup"]),this.timeManager.setTimer("live",Q)}update(){const e=this.timeManager.getTimer("live");0===e?De.toRemove(this.id):e===q&&this.timeManager.setTimer("blink",q),this.timeManager.decrementTimers()}render(){const e=this.timeManager.getTimer("blink");e&&e%50==0||ne.sprites.powerup[this.type](this.position,this.size)}resolveEntityCollision(e){xe(e)&&(De.toRemove(this.id),Se.notify(this.type),this.soundManager.play("powerup"))}}class Be extends ye{constructor(){super(Object.assign({},L),Object.assign({},D),M.Top),this.lives=3,this.power=k.Default,this.timeManager=new de,this.soundManager=new ue(["explode"]),this.timeManager.setTimer("spawn",N),this.timeManager.setTimer("invincible",_),Se.subscribe(this.id,function(e){e===S.Tank?this.lives+=1:e===S.Helmet?this.timeManager.setTimer("invincible",_):e===S.Star&&this.power<k.Second&&(this.power+=1)}.bind(this))}update(){this.timeManager.decrementTimers();const e=this.timeManager.getTimer("death"),t=this.timeManager.getTimer("spawn");e?1===e&&this.respawn(!0):t||this.processInput()}render(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death"),i=this.timeManager.getTimer("invincible");if(e)return w(this.position,ne.variableSprites.tankSpawn,N,e);if(t)return w(this.position,ne.variableSprites.tankDestruction,G,t);if(i){const e=ne.sprites.invincible;e[i%e.length](this.position,this.size)}this.animateMovement(ne.sprites.player[this.power][this.direction])}processInput(){const e=re.getKey();let t=!0;e===C.ArrowUp?this.direction=M.Top:e===C.ArrowDown?this.direction=M.Bottom:e===C.ArrowLeft?this.direction=M.Left:e===C.ArrowRight?this.direction=M.Right:t=!1,e===C.Space&&this.shot(z[this.power].shotCD),t&&this.move(z[this.power].velocity)}resolveEdgeCollision(){this.goBack()}resolveTileCollision(e){if(1===e.length){const t=this.forgiveCollision(e[0]);t?this.position=Object.assign({},t):this.goBack()}else this.goBack()}resolveEntityCollision(e){const t=this.timeManager.getTimer("death");if(!Me(e))if(be(e)&&!t){if(this.timeManager.getTimer("invincible"))return;this.timeManager.setTimer("death",G),this.soundManager.play("explode"),this.lives-=1,0===this.lives&&this.die()}else this.goBack()}respawn(e=!1){e&&(this.power=k.Default),this.soundManager.pauseAll(),this.timeManager.setTimer("spawn",N),this.timeManager.setTimer("invincible",_),this.position=Object.assign({},L),this.prevPosition=Object.assign({},L)}deconstruct(){this.soundManager.pauseAll(),Se.unsubscribe(this.id)}}class Ee extends me{constructor(e,t,i){super(e,Object.assign({},A),t),this.direction=t,this.shooter=i,this.soundManager=new ue(["hit","hitdmg"])}update(){this.move(j)}render(){this.animateMovement(ne.sprites.bullet[this.direction])}resolveEdgeCollision(){De.toRemove(this.id)}resolveTileCollision(e,t){if(e.every(e=>ce.includes(e.type)))return;De.toRemove(this.id);const i=xe(this.shooter)&&this.shooter.power===k.Second;e.some(e=>e.type===B.Steel)?this.soundManager.play("hit"):this.soundManager.play("hitdmg"),e.forEach(e=>{ce.includes(e.type)||e.type===B.Steel&&!i||t.destroy(e.position)})}resolveEntityCollision(e){Me(e)||(xe(this.shooter)&&ve(e)&&e.type>=1&&this.soundManager.play("hit"),De.toRemove(this.id))}}class Ce extends ye{constructor(e,t){super(t,Object.assign({},D),M.Bottom),this.type=e,this.lives=I[e].lives,this.prevTile=Object.assign({},t),this.timeManager=new de,this.soundManager=new ue(["explode"]),this.timeManager.setTimer("spawn",N),Se.subscribe(this.id,function(e){e===S.Stopwatch?this.timeManager.setTimer("freeze",W):e===S.Grenade&&(this.timeManager.some(["death","spawn"])||this.die())}.bind(this))}update(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death"),i=this.timeManager.getTimer("freeze");if(this.timeManager.decrementTimers(),e){if(this.isSpawnSpotClear())return void this.timeManager.setTimer("spawn",N)}else{if(t||i)return;this.aiMove(),this.shot(I[this.type].shotCD)}}render(){const e=this.timeManager.getTimer("spawn"),t=this.timeManager.getTimer("death");return e?w(this.position,ne.variableSprites.tankSpawn,N,e):t?w(this.position,ne.variableSprites.tankDestruction,G,t):void(this.type===T.Armored?this.animateMovement(ne.sprites.enemy[this.type][this.lives][this.direction]):this.animateMovement(ne.sprites.enemy[this.type][this.direction]))}aiMove(){const{velocity:e}=I[this.type];Math.abs(Math.floor(this.prevTile.x-this.position.x))>120||Math.abs(Math.floor(this.prevTile.y-this.position.y))>120?(this.prevTile=Object.assign({},this.position),this.setRandomDirection(),this.move(e)):this.move(e)}resolveEdgeCollision(){this.goBack(),this.setRandomDirection()}resolveTileCollision(e){if(1===e.length){const t=this.forgiveCollision(e[0]);t?this.position=Object.assign({},t):(this.setRandomDirection(),this.goBack())}else this.setRandomDirection(),this.goBack()}resolveEntityCollision(e){Me(e)||(be(e)&&xe(e.shooter)?1===this.lives?this.die():this.lives-=1:ve(e)?(this.goBack(),this.setOpositeDirection()):xe(e)&&(this.timeManager.getTimer("shotCD")>10&&this.setOpositeDirection(),this.goBack()))}setRandomDirection(){const e=[M.Top,M.Right,M.Bottom,M.Left].filter(e=>e!==this.direction),t=Math.floor(Math.random()*e.length);this.direction=e[t]}setOpositeDirection(){this.direction===M.Top?this.direction=M.Bottom:this.direction===M.Bottom?this.direction=M.Top:this.direction===M.Right?this.direction=M.Left:this.direction=M.Right}isSpawnSpotClear(){return De.entities.filter(e=>e.id!==this.id&&!be(e)).filter(e=>!ve(e)||!e.timeManager.getTimer("spawn")).some(e=>x(e.getBoundingBox(),this.getBoundingBox()))}deconstruct(){Se.unsubscribe(this.id)}}class Re extends ge{constructor(){super(P,O),this.isDestroyed=!1}render(){this.isDestroyed?ne.sprites.flagDeath(this.position,this.size):ne.sprites.flag(this.position,this.size)}resolveEntityCollision(e){be(e)&&(this.isDestroyed=!0)}}const De=new class{constructor(){this.toRemove=(e=>{this.toRemoveQueue.add(e)}),this.removeFromQueue=(()=>{this.toRemoveQueue.forEach(e=>{const t=this.pool[e];this._checkDeath(t)||(delete this.pool[e],t.deconstruct(),this.toRemoveQueue.delete(e))})}),this.pool={},this.toRemoveQueue=new Set}spawnEntity(e,...t){const i=new s[e](...t);this.pool[i.id]=i}getEnemies(){return this.entities.filter(ve)}getPlayer(){return this.entities.find(xe)}getFlag(){return this.entities.find(we)}render(){this.entities.forEach(e=>e.render())}update(){this.entities.forEach(e=>e.update())}checkCollisions(e){const t=new Set;this.entities.forEach(i=>{Me(i)||we(i)||(this.checkTileCollision(i,e),this.checkEntitiesCollision(i,t),t.add(i.id))})}checkTileCollision(e,t){if(e.isOutOfScreen())e.resolveEdgeCollision();else{const[i,s]=e.getFrontCollisionPoints(),n=t.lookupRange(i,s).filter(e=>he.includes(e.type)).filter(t=>x(e.getBoundingBox(),{x1:t.position.x,x2:t.position.x+$,y1:t.position.y,y2:t.position.y+$}));n.length&&e.resolveTileCollision(n,t)}}checkEntitiesCollision(e,t){this.entities.forEach(i=>{e.id===i.id||t.has(i.id)||this._isInteractive(i)&&x(e.getBoundingBox(),i.getBoundingBox())&&(e.resolveEntityCollision(i),i.resolveEntityCollision(e))})}clear(e=!0){if(e)Object.values(this.pool).forEach(e=>e.deconstruct()),this.pool={};else{const e=this.getPlayer();Object.values(this.pool).filter(t=>t.id!==e.id).forEach(e=>e.deconstruct()),this.pool={[e.id]:e}}this.toRemoveQueue=new Set}_isInteractive(e){return!fe(e)||!e.timeManager.some(["spawn","death"])}_checkDeath(e){if(fe(e))return e.timeManager.getTimer("death")}get entities(){return Object.values(this.pool)}};class Oe{constructor(e,t,i){this.number=e,this.map=t,this.tanks=[...i],this.powerupsAvailable=5,this.timeManager=new de,this.soundManager=new ue(["start"]),this.timeManager.setTimer("powerupSpawnCD",Q),this.soundManager.play("start"),De.spawnEntity("Flag")}update(){this.timeManager.decrementTimers(),this.spawnEnemy(),this.spawnPowerup()}isFinish(){const e=De.getEnemies();return!this.tanks.length&&!e.length}spawnEnemy(){const e=this.timeManager.getTimer("enemySpawnCD"),t=De.getEnemies();if(!this.tanks.length||t.length>4||e)return;const i=v(2);this.timeManager.setTimer("enemySpawnCD",H),De.spawnEntity("Enemy",this.tanks.pop(),Object.assign({},K[i]))}spawnPowerup(){if(this.timeManager.getTimer("powerupSpawnCD")||!this.powerupsAvailable)return;const e=v(Object.keys(S).length/2);De.spawnEntity("Powerup",S[S[e]],{x:v(500),y:v(500)}),this.timeManager.setTimer("powerupSpawnCD",Q),this.powerupsAvailable-=1}render(){this.map.renderLayer(E.under),this.map.renderLayer(E.main),De.render(),this.map.renderLayer(E.over)}get screenNum(){return this.number+1}}class Pe{constructor(){this.isStartScreen=!0,this.isLost=!1,this.timeManager=new de,this.soundManager=new ue(["gameover"])}createLoop(){let e=0,t=0;const i=s=>{for(e+=(s-t)/1e3;e>R;)this.update(),e-=R;this.render(),t=s,requestAnimationFrame(i)};i(0)}update(){this.timeManager.decrementTimers();const e=this.timeManager.getTimer("screenFade");if(this.isLost||this.isStartScreen||e)return;this.stage.update(),De.update(),De.checkCollisions(this.stage.map),De.removeFromQueue();const t=De.getPlayer(),i=De.getFlag();if(!t||i.isDestroyed)return De.clear(),this.gameOver();this.stage.isFinish()&&this.toNextStage()}render(){X.clearScreen(),ee.clearScreen(),this.isStartScreen?X.renderStartScreen():this.renderGame()}renderGame(){const e=this.timeManager.getTimer("screenFade");if(this.stage.render(),this.isLost)X.renderGameOver(e);else if(e)X.renderChaingingStage(e);else{const e=De.getPlayer();ee.render(e.lives,this.stage.screenNum,this.stage.tanks)}}gameOver(){this.soundManager.play("gameover"),this.timeManager.setTimer("screenFade",U),this.isLost=!0}isWaitingForRestart(){return!this.timeManager.getTimer("screenFade")&&this.isLost}getNextStageNum(){let e=this.stage.number+1;return e>oe.length-1&&(e=0),e}toNextStage(){this.timeManager.setTimer("screenFade",U),De.clear(!1);const e=this.getNextStageNum(),t=De.getPlayer();this.stage=new Oe(e,new pe(oe[e]),ae[e]),t.respawn()}play(){this.isStartScreen=!1,De.spawnEntity("Player"),this.timeManager.setTimer("screenFade",U),this.stage=new Oe(0,new pe(oe[0]),ae[0])}restart(){this.isLost=!1,De.clear(),this.play()}}!async function(){ne.runPreloader(),await Promise.all([ne.loadSprite(r.a),ne.loadAudio({explode:a.a,hit:c.a,hitdmg:p.a,powerup:d.a,start:m.a,gameover:f.a})]),ne.stopPreloader();const e=new Pe;re.listenToEvents(e),e.createLoop()}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,